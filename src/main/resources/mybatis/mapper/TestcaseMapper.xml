<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.aust.dao.TestcaseMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.aust.pojo.Testcase" >
    <id column="testcase_id" property="testcaseId" jdbcType="INTEGER" />
    <result column="problem_id" property="problemId" jdbcType="INTEGER" />
    <result column="codepath" property="codepath" jdbcType="VARCHAR" />
    <result column="input" property="input" jdbcType="VARCHAR" />
    <result column="output" property="output" jdbcType="VARCHAR" />
    <result column="time_limit" property="timeLimit" jdbcType="INTEGER" />
    <result column="memory_limit" property="memoryLimit" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    testcase_id, problem_id, codepath, input, output, time_limit, memory_limit
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from testcase
    where testcase_id = #{testcaseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from testcase
    where testcase_id = #{testcaseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.aust.pojo.Testcase" >
    insert into testcase (testcase_id, problem_id, codepath, 
      input, output, time_limit, 
      memory_limit)
    values (#{testcaseId,jdbcType=INTEGER}, #{problemId,jdbcType=INTEGER}, #{codepath,jdbcType=VARCHAR}, 
      #{input,jdbcType=VARCHAR}, #{output,jdbcType=VARCHAR}, #{timeLimit,jdbcType=INTEGER}, 
      #{memoryLimit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.aust.pojo.Testcase" >
    insert into testcase
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="testcaseId != null" >
        testcase_id,
      </if>
      <if test="problemId != null" >
        problem_id,
      </if>
      <if test="codepath != null" >
        codepath,
      </if>
      <if test="input != null" >
        input,
      </if>
      <if test="output != null" >
        output,
      </if>
      <if test="timeLimit != null" >
        time_limit,
      </if>
      <if test="memoryLimit != null" >
        memory_limit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="testcaseId != null" >
        #{testcaseId,jdbcType=INTEGER},
      </if>
      <if test="problemId != null" >
        #{problemId,jdbcType=INTEGER},
      </if>
      <if test="codepath != null" >
        #{codepath,jdbcType=VARCHAR},
      </if>
      <if test="input != null" >
        #{input,jdbcType=VARCHAR},
      </if>
      <if test="output != null" >
        #{output,jdbcType=VARCHAR},
      </if>
      <if test="timeLimit != null" >
        #{timeLimit,jdbcType=INTEGER},
      </if>
      <if test="memoryLimit != null" >
        #{memoryLimit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.aust.pojo.Testcase" >
    update testcase
    <set >
      <if test="problemId != null" >
        problem_id = #{problemId,jdbcType=INTEGER},
      </if>
      <if test="codepath != null" >
        codepath = #{codepath,jdbcType=VARCHAR},
      </if>
      <if test="input != null" >
        input = #{input,jdbcType=VARCHAR},
      </if>
      <if test="output != null" >
        output = #{output,jdbcType=VARCHAR},
      </if>
      <if test="timeLimit != null" >
        time_limit = #{timeLimit,jdbcType=INTEGER},
      </if>
      <if test="memoryLimit != null" >
        memory_limit = #{memoryLimit,jdbcType=INTEGER},
      </if>
    </set>
    where testcase_id = #{testcaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.aust.pojo.Testcase" >
    update testcase
    set problem_id = #{problemId,jdbcType=INTEGER},
      codepath = #{codepath,jdbcType=VARCHAR},
      input = #{input,jdbcType=VARCHAR},
      output = #{output,jdbcType=VARCHAR},
      time_limit = #{timeLimit,jdbcType=INTEGER},
      memory_limit = #{memoryLimit,jdbcType=INTEGER}
    where testcase_id = #{testcaseId,jdbcType=INTEGER}
  </update>
</mapper>